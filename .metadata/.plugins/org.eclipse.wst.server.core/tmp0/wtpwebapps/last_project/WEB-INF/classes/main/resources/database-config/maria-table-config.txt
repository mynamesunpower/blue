show databases;
------------------------------------------------ 현재 버전 v1.4 (21/3/2) 입니다 ------- 슬랙으로 최신화 상태 확인필수 ---------
-- !반드시 !important 이 데이터베이스 이름으로 ----
use last;

-----------------
show tables;

-- 삭제할거면 이 구문.
drop table if exists payment, review_mate, recommend_mate, mate, customer_service, admin, member;

-- 회원 테이블
create table member (
    id varchar(20) primary key, -- 아이디
    name varchar(30) not null, -- 이름
    tel varchar(20) not null, -- 전화번호
    address varchar(255) not null, -- 주소
    password varchar(100) not null, -- 비밀번호
    email varchar(100) not null, -- 이메일
    birthday varchar(8) not null -- 생년월일
);

-- 관리자 테이블
create table admin (
    admin_id varchar(20) primary key, -- 관리자 아이디
    password varchar(100) not null -- 비밀번호 (암호화) 아 관리자는 하지 말까 ㅋㅋ
);

-- 고객문의 테이블
create table customer_service (
    service_id int primary key, -- 문의번호 (시퀀스)
    id varchar(20) not null, -- 고객아이디
    writing_date date not null, -- 작성일자
    content text(1000) not null, -- 내용
    category varchar(20) not null, -- 문의카테고리
    admin_id varchar(20) not null, -- 답변한관리자id
    foreign key (id) references member (id),
    foreign key (admin_id) references admin (admin_id)
);

-- 메이트 테이블
create table mate (
    id varchar(20) primary key, -- 메이트 아이디
    nickname varchar(20) not null, -- 닉네임
    photo_dir varchar(255) not null, -- 프로필사진 저장 경로
    photo_score float(3, 2) default 1.0, -- 사진 점수 (1.0 ~ 5.0 사진으로 ML)
    profile_score float(5, 2) default 50.0, -- 프로필 점수 (기본 50점에 이것저것 ML, 빅데이터처리들어가자)
    cash int default 0, -- 캐시
    gender varchar(10) not null, -- 성별
    interest varchar(100) default '없음', -- 관심사
    introduce text(500) default '자기소개가 없습니다.', -- 자기소개
    foreign key (id) references member (id)
);

-- 추천 메이트 목록 테이블
create table recommend_mate (
    id varchar(20) not null, -- 메이트 아이디
    festival_name varchar(255) not null, -- 축제 이름
    foreign key (id) references mate (id)
);

-- 메이트 리뷰 테이블
create table review_mate (
    id varchar(20) not null, -- 메이트 아이디
    writing_time date not null, -- 작성시각
    writer_id varchar(20) not null, -- 작성자 아이디
    mate_score float(3, 2) default 1.0, -- 평점 1 ~ 5 소수
    content text(500) default '', -- 리뷰 내용
    etc varchar(255) default '', -- 기타옵션 (매너좋아요, 착해요,.. 등등 이걸로 긍정적/부정적도 평가하고 메이트 프로필 점수도 평가)
    foreign key (id) references mate (id)
);

-- 결제 테이블
create table payment (
    payment_id int primary key, -- 결제번호 (시퀀스)
    id varchar(20) not null, -- 결제한 아이디
    payment_bool boolean not null, -- 결제여부 (?)
    payment_date date not null, -- 결제일시
    payment_amount int not null, -- 결제금액
    foreign key (id) references mate (id)
);